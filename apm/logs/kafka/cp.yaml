---
#https://hub.docker.com/r/bitnami/kafka

x-kafka-ui: &kafka-ui
    image: provectuslabs/kafka-ui:latest #https://docs.kafka-ui.provectus.io/configuration/configuration-file
    ports:
      - 8088:8080
    depends_on:
      kafka:
         condition: service_healthy
      schemaregistry:
         condition: service_healthy
      kafka-connect:
         condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: SASL_PLAINTEXT
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM: PLAIN
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
      DYNAMIC_CONFIG_ENABLED: true 
      LOGGING_LEVEL_ROOT: info
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schemaregistry:8081
            # optional auth properties for SR
            #kafka.clusters.0.schemaRegistryAuth.username: "use"
            #kafka.clusters.0.schemaRegistryAuth.password: "pswrd
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: local
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083"

name: cs
services:
  kafka:
    image: confluentinc/cp-kafka:7.2.1 #https://github.com/provectus/kafka-ui/blob/master/documentation/compose/kafka-ui-sasl.yaml
    container_name: kafka
    ports:
      - 9092
    labels:
       app.name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,SASL_PLAINTEXT:SASL_PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'SASL_PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/jaas/kafka_server.conf"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'SASL_PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'SASL_PLAINTEXT' #plaintext, ssl, sasl_plaintext, sasl_ssl
      KAFKA_SASL_ENABLED_MECHANISMS: 'PLAIN'
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: 'PLAIN'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_SECURITY_PROTOCOL: 'SASL_PLAINTEXT'
      KAFKA_SUPER_USERS: 'User:admin,User:enzo'
    volumes:
      - ./scripts/update_run.sh:/tmp/update_run.sh
      - ./jaas:/etc/kafka/jaas
    command: "bash -c  /tmp/update_run.sh"
    healthcheck:    
      test: [ "CMD", "bash", "-c", "cat < /dev/null > /dev/tcp/127.0.0.1/9092" ]
      interval: 10s #健康检查的执行间隔
      timeout: 2s  #健康检查命令的超时时间
      retries: 3 #失败的次数
      start_period: 10s #开始执行健康检查之前的等待时间
    networks:
      - ck

  kafka-ui:
    container_name: kafka-ui
    <<: *kafka-ui
    networks:
      - ck

  schemaregistry:
    image: confluentinc/cp-schema-registry:7.7.1
    container_name: schemaregistry
    ports:
        - 8081
    depends_on:
      kafka:
         condition: service_healthy
    environment:
        SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: SASL_PLAINTEXT://kafka:29092
        SCHEMA_REGISTRY_HOST_NAME: schemaregistry
        SCHEMA_REGISTRY_LISTENERS: http://schemaregistry:8081
        SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SASL_PLAINTEXT
        SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: PLAIN
        SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: |
          org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
        SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "http"
        SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
        # 配置持久化在 _schemas
        SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
        SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: http
    healthcheck:   
      test: [ "CMD", "bash", "-c", "cat < /dev/null > /dev/tcp/schemaregistry/8081" ]
      interval: 6s #健康检查的执行间隔
      timeout: 2s  #健康检查命令的超时时间
      retries: 3 #失败的次数
      start_period: 10s #开始执行健康检查之前的等待时间
    networks:
      - ck

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.7.1
    container_name: kafka-connect
    ports:
      - 8083
    depends_on:
      schemaregistry:
         condition: service_healthy
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: _connect_configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: _connect_offset
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: _connect_status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry:8081
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry:8081
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      # SASL_PLAINTEXT settings
      CONNECT_SECURITY_PROTOCOL: "SASL_PLAINTEXT"
      CONNECT_SASL_MECHANISM: "PLAIN"
      CONNECT_SASL_JAAS_CONFIG: |
         org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
    healthcheck:   
      test: [ "CMD", "bash", "-c", "cat < /dev/null > /dev/tcp/127.0.0.1/8083" ]
      interval: 8s #健康检查的执行间隔
      timeout: 2s  #健康检查命令的超时时间
      retries: 3 #失败的次数
      start_period: 21s #开始执行健康检查之前的等待时间
    networks:
      - ck

networks:
  ck:
    external: true
