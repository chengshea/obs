---
#https://hub.docker.com/r/bitnami/kafka

x-kafka-ui: &kafka-ui
    image: provectuslabs/kafka-ui:latest #https://docs.kafka-ui.provectus.io/configuration/configuration-file
    ports:
      - 8088:8080
    depends_on:
      kafka:
         condition: service_healthy
      schemaregistry:
         condition: service_healthy
      kafka-connect:
         condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: SASL_PLAINTEXT
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM: PLAIN
      KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG: |
        org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
      DYNAMIC_CONFIG_ENABLED: true 
      LOGGING_LEVEL_ROOT: info
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schemaregistry:8081
            # optional auth properties for SR
            #kafka.clusters.0.schemaRegistryAuth.username: "use"
            #kafka.clusters.0.schemaRegistryAuth.password: "pswrd
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: local
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://kafka-connect:8083"

x-console-ui: &console-ui
  image: kafka-console-ui:v1.0.11 #7766
  ports:
    - 8088:7766
  environment:
    AUTH_ENABLED: true
    KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    KAFKA_PROPERTIES: |
      sasl.mechanism=PLAIN\nsasl.jaas.config\=org.apache.kafka.common.security.plain.PlainLoginModule\u0020required\u0020username=\"admin\"\u0020password=\"admin-secret\";\nsecurity.protocol\=SASL_PLAINTEXT
    read_sasl: |
      sasl.mechanism=PLAIN
      sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
      security.protocol=SASL_PLAINTEXT
  volumes:
    - /mnt/lvm/oss/kafka/ui/data:/app/data
    - /mnt/lvm/oss/kafka/ui/log:/app/log

name: cs
services:
  kafka:
    image: 'bitnami/kafka:3.3.2'
    container_name: kafka
    ports:
      - 29092
      - 29093
      - 9092
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=CLIENT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_CLIENT_USERS=admin
      - KAFKA_CLIENT_PASSWORDS=admin-secret
      # KRaft 模式
      - KAFKA_KRAFT_CLUSTER_ID=4L6g3nShT-eMCtK--X86sw
      # Kafka Broker 通信
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL=PLAIN
      - KAFKA_CLIENT_LISTENER_NAME=CLIENT
      - KAFKA_CFG_SASL_ENABLED_MECHANISMS=PLAIN
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:SASL_PLAINTEXT,CLIENT:SASL_PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      # 配置文件参数KAFKA_CFG_  
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      # controller
      - KAFKA_CFG_SASL_MECHANISM_CONTROLLER_PROTOCOL=PLAIN
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:29093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CONTROLLER_USER=controller_user
      - KAFKA_CONTROLLER_PASSWORD=controller_password
      - KAFKA_VOLUME_DIR=/bitnami/kafka
      #- KAFKA_OPTS="-Djava.security.auth.login.config=/bitnami/kafka_server.conf"
    volumes:
      - ./jaas/kafka_server.conf:/bitnami/kafka_server.conf:ro
    healthcheck: #      test: [ "CMD", "bash", "-c", "cat < /dev/null > /dev/tcp/127.0.0.1/9092" ]
      test: ["CMD", "/opt/bitnami/kafka/bin/kafka-topics.sh", "--list", "--bootstrap-server=localhost:9092"]
      interval: 10s #健康检查的执行间隔
      timeout: 2s  #健康检查命令的超时时间
      retries: 3 #失败的次数
      start_period: 10s #开始执行健康检查之前的等待时间
    networks:
      - ck

  kafka-ui:
    container_name: kafka-ui
    <<: *console-ui
    networks:
      - ck

  schemaregistry:
    image: confluentinc/cp-schema-registry:7.7.1
    container_name: schemaregistry
    ports:
        - 8081
    depends_on:
      kafka:
         condition: service_healthy
    environment:
        SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: SASL_PLAINTEXT://kafka:29092
        SCHEMA_REGISTRY_HOST_NAME: schemaregistry
        SCHEMA_REGISTRY_LISTENERS: http://schemaregistry:8081
        SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL: SASL_PLAINTEXT
        SCHEMA_REGISTRY_KAFKASTORE_SASL_MECHANISM: PLAIN
        SCHEMA_REGISTRY_KAFKASTORE_SASL_JAAS_CONFIG: |
          org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";
        SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: "http"
        SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: INFO
        SCHEMA_REGISTRY_KAFKASTORE_TOPIC: _schemas
        SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: http
    healthcheck:   
      test: [ "CMD", "bash", "-c", "cat < /dev/null > /dev/tcp/schemaregistry/8081" ]
      interval: 6s #健康检查的执行间隔
      timeout: 2s  #健康检查命令的超时时间
      retries: 3 #失败的次数
      start_period: 10s #开始执行健康检查之前的等待时间
    networks:
      - ck

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.7.1
    container_name: kafka-connect
    ports:
      - 8083
    depends_on:
      kafka:
         condition: service_healthy
      schemaregistry:
         condition: service_healthy
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: _connect_configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_TOPIC: _connect_offset
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: _connect_status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry:8081
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schemaregistry:8081
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      # SASL_PLAINTEXT settings
      CONNECT_SECURITY_PROTOCOL: "SASL_PLAINTEXT"
      CONNECT_SASL_MECHANISM: "PLAIN"
      CONNECT_SASL_JAAS_CONFIG: 'org.apache.kafka.common.security.plain.PlainLoginModule required username="admin" password="admin-secret";'
    healthcheck:   
      test: [ "CMD", "bash", "-c", "cat < /dev/null > /dev/tcp/127.0.0.1/8083" ]
      interval: 8s #健康检查的执行间隔
      timeout: 2s  #健康检查命令的超时时间
      retries: 3 #失败的次数
      start_period: 21s #开始执行健康检查之前的等待时间
    networks:
      - ck

networks:
  ck:
    external: true
