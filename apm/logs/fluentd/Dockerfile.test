# https://github.com/fluent/fluentd-docker-image/blob/master/v1.17/alpine/Dockerfile
# DO NOT EDIT THIS FILE DIRECTLY, USE /Dockerfile.template.erb
FROM alpine:3.19
RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories
# Do not split this into multiple RUN!
# Docker creates a layer for every RUN-Statement
# therefore an 'apk delete' has no effect
RUN apk update \
 && apk add --no-cache \
        ca-certificates \
        ruby ruby-irb ruby-etc ruby-webrick \
        tini \
 && apk add --no-cache --virtual .build-deps \
        build-base linux-headers \
        ruby-dev gnupg bash openssl-dev zlib-dev \
 && gem sources --remove https://rubygems.org/ \
 && gem sources --add https://gems.ruby-china.com/ \
 && echo 'gem: --no-document' >> /etc/gemrc \
 && gem install oj -v 3.16.5 \
 && gem install json -v 2.7.2 \
 && gem install rexml -v 3.3.5 \
 && gem install async -v 1.32.1 \
 && gem install async-http -v 0.64.2 \
 && gem install fluentd -v 1.17.1 \
 && export GEM_DIR=$(ruby -e 'puts Gem.dir') \
 && echo GEM_DIR=$GEM_DIR \
 && rm -rf $GEM_DIR/cache/*.gem \
 && find $GEM_DIR -type d -name test -or -name ext -or -name spec -or -name benchmark | xargs -r rm -rf \
 && find $GEM_DIR -name "*.so" | xargs -r strip \
 && gem install bigdecimal -v 1.4.4 \
 && gem install fluent-plugin-docker_metadata_filter -v 0.1.3 \
 && gem install fluent-plugin-kafka -v 0.19.3 \
 && gem install rdkafka -v 0.18.0 \
 && export GEM_DIR=$(ruby -e 'puts Gem.dir') \
 && echo GEM_DIR=$GEM_DIR \
 && rm -rf $GEM_DIR/cache/*.gem \
 && find $GEM_DIR -type d -name test  -or -name spec -or -name benchmark | xargs -r rm -rf \
 && find $GEM_DIR -type f -name *.tar.gz | xargs rm \
 && apk del .build-deps \
 && rm -rf /var/cache/apk/* \
 && rm -rf /tmp/* /var/tmp/*

RUN mkdir -p /fluentd/log \
    # configuration/plugins path (default: copied from .)
    && mkdir -p /fluentd/etc /fluentd/plugins 


COPY fluent.conf /fluentd/etc/
COPY entrypoint.sh /bin/


ENV FLUENTD_CONF="fluent.conf"

ENV LD_PRELOAD=""
EXPOSE 24224 5140


ENTRYPOINT ["tini",  "--", "/bin/entrypoint.sh"]
CMD ["fluentd"]
