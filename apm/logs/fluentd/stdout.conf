<system>
  # The default log level is info, and Fluentd outputs info, warn, error and fatal
  log_level info
</system>

# path 不支持复杂正则
<source>
  @type tail
  path /var/lib/docker/containers/*/*-json.log
  pos_file /var/log/td-agent/fluentd-docker.pos
  pos_file_compaction_interval 12h
  tag docker.*
  refresh_interval 18
  skip_refresh_on_startup true
  <parse>
    @type json
  </parse>
  read_from_head false
  multiline_flush_interval 3s
</source>

# 错误日志统一处理 模拟错误 http://localhost:8089/error
<source>
  @type tail
  path /home/*.log
  pos_file /var/log/td-agent/fluentd-file.pos
  pos_file_compaction_interval 12h
  tag docker.file
  refresh_interval 18
  skip_refresh_on_startup true
  <parse>
    @type multiline
    format_firstline /((^[a-zA-Z]+\s+|^\[|^)\d{3,4}.\d{1,3}.\d{1,3})/
    format1 /^(?<log>\d{4}.\d{1,2}.\d{1,2} \d{2}:\d{2}:\d{2}.*)/
  </parse>
  read_from_head false
  multiline_flush_interval 3s
  path_key topic_name
</source>

# 2024-10-19 14:17:13.000000000 +0000 tag: {"log": "...."}
<filter docker.**>
  @type grep
  # 过滤
  <exclude>
      key log
      pattern /docker.(var.lib.docker|file)*:|\\{2,}|^(\r?\n)?$|^\s*$/
  </exclude>
</filter>

<filter docker.file>
  @type record_transformer
  enable_ruby true
  <record>
    # 重命名key,并去掉value的/
    container_name ${record["topic_name"].match(/\/([^\/]+)-error\.log$/)[1]}
    topic_name ${'fluent_' +record["topic_name"].match(/\/([^\/]+)-error\.log$/)[1] || 'fluent_logs-default'}
  </record>
</filter>


# https://github.com/fabric8io/fluent-plugin-docker_metadata_filter
<filter docker.var.lib.docker.containers.*.*.log>
  @type docker_metadata
</filter>

# 过滤处理
<filter docker.var.lib.docker.containers.*.*.log>
  @type grep
  # 采集指定容器
  <regexp>
    key $.docker.name
    pattern nginx|kafka
  </regexp>
</filter>


<filter docker.var.lib.docker.containers.*.*.log>
  @type record_transformer
  enable_ruby true
  <record>
    # 重命名key,并去掉value的/
    container_name ${record["docker"]["name"].gsub('/', '')}
    topic_name ${'fluent_' + record["docker"]["name"] || 'fluent_logs-default'}
  </record>
  remove_keys $.docker
</filter>
# remove_keys $.docker.labels,$.docker.image_id,$.docker.container_hostname,$.docker.id,log



<match docker.**>
  # @type stdout
  @type http
  endpoint "http://vmlogs:9428/insert/jsonline"
  headers {"VL-Msg-Field": "log", "VL-Time-Field": "time", "VL-Stream-Fields": "path"}
  open_timeout 2
  <buffer>
    flush_interval 10s
    flush_at_shutdown true
  </buffer>
  compress gzip
  retryable_response_codes [503]
</match>


